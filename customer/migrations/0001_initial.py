# Generated by Django 4.0.1 on 2023-06-06 16:34

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bdr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plate', models.CharField(max_length=100, verbose_name='Номер ТЗ')),
                ('document', models.CharField(max_length=100, verbose_name='Документ')),
                ('date_start', models.DateTimeField(auto_now_add=True, verbose_name='дата добавления')),
                ('status', models.BooleanField(default=False, verbose_name='статус')),
            ],
            options={
                'verbose_name': 'БДР',
                'verbose_name_plural': 'БДР',
            },
        ),
        migrations.CreateModel(
            name='Court',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=300, verbose_name='номер дела')),
                ('code', models.CharField(max_length=150, verbose_name='код дела')),
                ('court', models.CharField(max_length=300, verbose_name='Суд')),
                ('claimant', models.TextField(verbose_name='стороны спора')),
                ('date', models.DateField(verbose_name='Дата')),
                ('subscribe', models.BooleanField(default=False, verbose_name='подписка?')),
            ],
            options={
                'verbose_name': 'судебное дело',
                'verbose_name_plural': 'судебные дела',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Debtors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscribe', models.BooleanField(default=False, verbose_name='подписка?')),
            ],
            options={
                'verbose_name': 'должника',
                'verbose_name_plural': 'должники',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Departure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days', models.IntegerField(default=0)),
                ('subscribe', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'миграцию',
                'verbose_name_plural': 'миграции',
            },
        ),
        migrations.CreateModel(
            name='Minjust',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscribe', models.BooleanField(default=False, verbose_name='подписка?')),
            ],
            options={
                'verbose_name': 'миньюст',
                'verbose_name_plural': 'миньюст',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='название')),
                ('text', models.TextField(max_length=800, verbose_name='описание')),
                ('image', models.FileField(blank=True, null=True, upload_to='news/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg', 'mp4'])], verbose_name='медиа')),
                ('language', models.CharField(max_length=100, verbose_name='язык')),
                ('date', models.DateField(auto_now_add=True, verbose_name='дата')),
                ('status', models.CharField(choices=[('save', 'Сохранена'), ('publish', 'Опубликована'), ('send', 'Готовится к отправке'), ('finish', 'Завершена')], default='save', max_length=50, verbose_name='статус')),
            ],
            options={
                'verbose_name': 'новость',
                'verbose_name_plural': 'новости',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.CharField(max_length=200, verbose_name='Chat Id')),
                ('username', models.CharField(blank=True, max_length=100, null=True, verbose_name='username')),
                ('language', models.CharField(choices=[('en', 'Англ'), ('ua', 'Укр'), ('ru', 'Рус')], default='en', max_length=10, verbose_name='Язык пользователя')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='имя')),
                ('name_en', models.CharField(blank=True, max_length=200, null=True, verbose_name='имя на англ')),
                ('date_end', models.DateTimeField(blank=True, null=True, verbose_name='дата окончания подписки')),
                ('date_register', models.DateTimeField(auto_now_add=True, verbose_name='дата регистрации')),
                ('role', models.CharField(choices=[('client', 'Обычный'), ('agent', 'Свободный'), ('expert', 'Полный'), ('support', 'Тех.Поддержка'), ('admin', 'Администратор')], default='client', max_length=10, verbose_name='тариф')),
                ('subs_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='order_id последней оплаты')),
                ('blocked', models.BooleanField(choices=[(False, 'Активный'), (True, 'Заблокирован')], default=False, verbose_name='статус')),
                ('unsubscribe_news', models.BooleanField(default=False, verbose_name='отписан от новых новостей?')),
            ],
            options={
                'verbose_name': 'пользователя',
                'verbose_name_plural': 'пользователей',
                'ordering': ['date_register'],
            },
        ),
        migrations.CreateModel(
            name='Search',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='имя')),
                ('surname', models.CharField(max_length=100, verbose_name='фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=100, null=True, verbose_name='отчество')),
                ('date_start', models.DateTimeField(auto_now_add=True, verbose_name='дата добавления')),
                ('status', models.BooleanField(default=True, verbose_name='статус')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.user', verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'поиск',
                'verbose_name_plural': 'поиски',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='NewsContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=800, verbose_name='текст')),
                ('image', models.FileField(blank=True, null=True, upload_to='news/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg', 'mp4'])], verbose_name='медиа')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content', to='customer.news', verbose_name='новость')),
            ],
            options={
                'verbose_name': 'контент',
                'verbose_name_plural': 'контенты',
            },
        ),
        migrations.CreateModel(
            name='Mvs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.URLField(verbose_name='фото')),
                ('region', models.CharField(max_length=300, verbose_name='регион')),
                ('category', models.CharField(max_length=300, verbose_name='категория')),
                ('disappearance', models.DateField(verbose_name='дата исчезновения')),
                ('accusations', models.CharField(max_length=300, verbose_name='статья обвинений')),
                ('birth', models.DateField(verbose_name='др')),
                ('precaution', models.CharField(max_length=300, verbose_name='мера пресечения')),
                ('link', models.URLField(verbose_name='ссылка')),
                ('subscribe', models.BooleanField(default=False, verbose_name='подписка?')),
                ('search', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mvs', to='customer.search', verbose_name='поисковый запрос')),
            ],
            options={
                'verbose_name': 'МВС розыск',
                'verbose_name_plural': 'МВС розыски',
                'ordering': ['disappearance'],
            },
        ),
        migrations.CreateModel(
            name='MinjustFop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person', models.CharField(max_length=200, verbose_name='ФИО')),
                ('record_number', models.CharField(max_length=500, verbose_name='Номер записи')),
                ('address', models.CharField(max_length=300, verbose_name='Адрес')),
                ('action', models.TextField(verbose_name='Деятельность')),
                ('tax', models.CharField(blank=True, max_length=100, null=True, verbose_name='Тип налогов')),
                ('state', models.CharField(max_length=150, verbose_name='Состояние')),
                ('phone', models.TextField(blank=True, null=True, verbose_name='Телефон')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата записи')),
                ('subscribe', models.BooleanField(default=False, verbose_name='подписка?')),
                ('minjust', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='minjust_fop', to='customer.minjust', verbose_name='миньюст')),
            ],
            options={
                'verbose_name': 'фоп',
                'verbose_name_plural': 'фопы',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='MinjustCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название Юр.Лица')),
                ('code', models.CharField(max_length=100, verbose_name='Код Юр.Лица')),
                ('address', models.CharField(max_length=500, verbose_name='Адрес')),
                ('managers', models.TextField(verbose_name='Управляющие')),
                ('action', models.TextField(verbose_name='Деятельность')),
                ('capital', models.FloatField(default=0, verbose_name='Капитал')),
                ('phone', models.TextField(blank=True, null=True, verbose_name='Телефон')),
                ('state', models.CharField(max_length=150, verbose_name='Состояние')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата записи')),
                ('subscribe', models.BooleanField(default=False, verbose_name='подписка?')),
                ('minjust', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='minjust_company', to='customer.minjust', verbose_name='миньюст')),
            ],
            options={
                'verbose_name': 'юр.лицо',
                'verbose_name_plural': 'юр.лица',
                'ordering': ['pk'],
            },
        ),
        migrations.AddField(
            model_name='minjust',
            name='search',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='minjust', to='customer.search', verbose_name='поисковый запрос'),
        ),
        migrations.CreateModel(
            name='InactiveDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_doc', models.CharField(choices=[('2', 'ID Паспорт'), ('1', 'Паспорт Украины в виде книги'), ('3', 'Загран Паспорт'), ('5', 'Временное удостоверение гражданина Украины'), ('6', 'Удостоверение лица без гражданства для выезда за границу'), ('8', 'Удостоверение на временное жительство'), ('16', 'Удостоверение на временное жительство (биометрическое)'), ('7', 'Удостоверение на постоянное жительство'), ('15', 'Удостоверение на постоянное жительство (биометрическое)'), ('10', 'Удостоверение беженца'), ('11', 'Проездной документ беженца'), ('12', 'Удостоверение личности, которая нуждается в дополнительной защите'), ('13', 'Проездной документ лица, которому предоставлена дополнительная защита'), ('14', 'Проездной документ ребенка')], max_length=5, verbose_name='тип документа')),
                ('series', models.CharField(blank=True, max_length=50, null=True, verbose_name='серия документа')),
                ('number', models.CharField(max_length=50, verbose_name='номер документа')),
                ('status', models.BooleanField(blank=True, null=True, verbose_name='статус')),
                ('description', models.TextField(verbose_name='текст')),
                ('subscribe', models.BooleanField(default=False, verbose_name='подписка?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inactive_doc', to='customer.user', verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'неактивный документ',
                'verbose_name_plural': 'неактивные документы',
            },
        ),
        migrations.CreateModel(
            name='DocState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_doc', models.CharField(choices=[('zp', 'Загран Паспорт'), ('id', 'ID Паспорт'), ('tt', 'Удостоверение на временное жительство'), ('tp', 'Удостоверение на постоянное жительство'), ('dd', 'Разрешение на имиграция в Украину'), ('pp', 'Продолжения срока нахождения в Украинре')], max_length=5, verbose_name='тип документа')),
                ('for_doc', models.CharField(choices=[('0', 'Для взрослого'), ('1', 'Для ребенка')], default='1', max_length=5, verbose_name='для кого оформлялся')),
                ('register_doc', models.CharField(blank=True, choices=[('book', 'Паспорт Украины в форме книжечки'), ('id', 'Паспорт Украины в форме карточки'), ('cert', 'Свидетельства о рождении')], max_length=5, null=True, verbose_name='оформление на основе')),
                ('series', models.CharField(blank=True, max_length=50, null=True, verbose_name='серия документа')),
                ('number', models.CharField(max_length=50, verbose_name='номер документа')),
                ('description', models.TextField(verbose_name='текст')),
                ('subscribe', models.BooleanField(default=False, verbose_name='подписка?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doc_state', to='customer.user', verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'готовность документа',
                'verbose_name_plural': 'готовность документов',
            },
        ),
        migrations.CreateModel(
            name='DepartureElem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_entry', models.DateField(verbose_name='дата прибытия')),
                ('date_of_departure', models.DateField(blank=True, null=True, verbose_name='дата убытия')),
                ('departure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dep_elem', to='customer.departure', verbose_name='миграция')),
            ],
            options={
                'verbose_name': 'дату миграции',
                'verbose_name_plural': 'даты миграции',
            },
        ),
        migrations.AddField(
            model_name='departure',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.user', verbose_name='пользователь'),
        ),
        migrations.CreateModel(
            name='DebtorsElem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth', models.DateField(verbose_name='дата рождения')),
                ('publisher', models.CharField(max_length=300, verbose_name='документ выдан')),
                ('connection', models.TextField(verbose_name='связь')),
                ('number', models.CharField(max_length=100, verbose_name='ВП номер')),
                ('deduction', models.CharField(max_length=300, verbose_name='Категория взысканий')),
                ('debtors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debtors_elem', to='customer.debtors', verbose_name='должник')),
            ],
            options={
                'verbose_name': 'долг',
                'verbose_name_plural': 'долги',
                'ordering': ['pk'],
            },
        ),
        migrations.AddField(
            model_name='debtors',
            name='search',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debtors', to='customer.search', verbose_name='поисковый запрос'),
        ),
        migrations.CreateModel(
            name='CourtElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_approval', models.DateField(verbose_name='дата принятие решение')),
                ('number', models.CharField(max_length=300, verbose_name='номер решения')),
                ('chairmen', models.CharField(max_length=300, verbose_name='судья')),
                ('form', models.CharField(max_length=300, verbose_name='форма судебного решения')),
                ('court_type', models.CharField(max_length=300, verbose_name='форма судопроизводства')),
                ('link', models.URLField(verbose_name='ссылка')),
                ('court', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='court_elem', to='customer.court', verbose_name='судебное дело')),
            ],
            options={
                'verbose_name': 'судебное решение',
                'verbose_name_plural': 'судебные решения',
                'ordering': ['date_approval'],
            },
        ),
        migrations.AddField(
            model_name='court',
            name='search',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='court', to='customer.search', verbose_name='поисковый запрос'),
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='название')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer.user', verbose_name='создатель')),
            ],
            options={
                'verbose_name': 'страну',
                'verbose_name_plural': 'страны',
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='название')),
                ('chat_id', models.CharField(max_length=300, verbose_name='Chat Id')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer.country', verbose_name='страна')),
            ],
            options={
                'verbose_name': 'чат',
                'verbose_name_plural': 'чаты',
            },
        ),
        migrations.CreateModel(
            name='BdrElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=300, verbose_name='номер постановления')),
                ('link', models.URLField(verbose_name='ссылка')),
                ('date', models.DateField(verbose_name='дата нарушения')),
                ('pay', models.BooleanField(verbose_name='оплачен?')),
                ('amount', models.FloatField(verbose_name='сумма штрафа')),
                ('description', models.CharField(max_length=300, verbose_name='описание')),
                ('date_add', models.DateTimeField(auto_now_add=True, verbose_name='дата добавления')),
                ('bdr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bdr_elem', to='customer.bdr', verbose_name='БДР')),
            ],
            options={
                'verbose_name': 'штраф',
                'verbose_name_plural': 'штрафы',
                'ordering': ['date'],
            },
        ),
        migrations.AddField(
            model_name='bdr',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.user', verbose_name='пользователь'),
        ),
        migrations.CreateModel(
            name='AsvpElem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agency', models.CharField(max_length=300, verbose_name='исполнитель')),
                ('date_open', models.DateField(blank=True, null=True, verbose_name='Дата открытия')),
                ('creditors_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='коллектор')),
                ('status', models.CharField(max_length=100, verbose_name='статус')),
                ('subscribe', models.BooleanField(default=False, verbose_name='подписка?')),
                ('debtors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asvp_elem', to='customer.debtorselem', verbose_name='должник')),
            ],
            options={
                'verbose_name': 'АСВП элемент',
                'verbose_name_plural': 'АСВП элементы',
                'ordering': ['pk'],
            },
        ),
    ]
